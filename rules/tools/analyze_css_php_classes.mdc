---
description: "[TODO: Add description]"
globs:
  - "*.*"
alwaysApply: false
---

# Tool Rule: analyze_css_php_classes.py

## Purpose

Analyzes PHP and CSS files within specified directories to extract and compare CSS class usage. It identifies potential CSS classes used in PHP (`class="..."` attributes) and CSS class definitions (`.class-name`) found in CSS files, including following `@import` statements within the specified CSS directory. This helps identify potentially unused CSS classes or classes used in PHP but not defined in CSS.

## Execution Command

```sh
python tools/analyze_css_php_classes.py --php-dir <path_to_php_dir> --css-dir <path_to_css_dir> [--output-php <output_php_file>] [--output-css <output_css_file>] [--exclude-dirs <dir1> <dir2> ...]
```

## Arguments

-   `--php-dir` (Required): Path to the directory containing PHP files to scan.
-   `--css-dir` (Required): Path to the directory containing CSS files to scan. The script will follow `@import` statements relative to this directory, but only if the imported file resides within this directory tree.
-   `--output-php` (Optional): Path to the output file for dumping the list of unique potential CSS classes found in PHP files. (Default: `php_classes_used.txt`)
-   `--output-css` (Optional): Path to the output file for dumping the list of unique CSS class definitions found in CSS files. (Default: `css_classes_defined.txt`)
-   `--exclude-dirs` (Optional, accepts multiple values): A list of directory names to exclude during scanning. (Default: `node_modules`, `.git`, `.svn`, `.vscode`, `.cursor`)

## Input

-   Reads `.php` files recursively within the `--php-dir`.
-   Reads `.css` files recursively within the `--css-dir`.
-   Parses `class="..."` attributes in PHP files.
-   Parses `.class-name` selectors and `@import url(...)` rules in CSS files.

## Output

-   **To Standard Output:** Prints status messages indicating which directories are being scanned and the counts of unique classes found in PHP and CSS.
-   **To Files:**
    -   Writes a sorted list of unique potential CSS classes found in PHP files to the path specified by `--output-php`.
    -   Writes a sorted list of unique defined CSS classes found in CSS files (following valid imports) to the path specified by `--output-css`.
-   **To Standard Error:** Prints error messages if input directories are not found or if file reading errors occur. Prints warnings for unfound `@import` targets.
-   **Exit Code:**
    -   `0`: If the script completes successfully (even if errors occurred during file reading/parsing).
    -   `1`: If required directory arguments (`--php-dir`, `--css-dir`) are invalid or point to non-existent directories.

## When to Use

-   **`AuditAgent` / `RefactorAgent`:** To identify potentially unused CSS or discrepancies between PHP class usage and CSS definitions.
-   **`StylingAgent`:** To understand existing class usage before making changes.

## How to Use

1.  Identify the relevant directories containing PHP and CSS source files.
2.  Construct the command using `python tools/analyze_css_php_classes.py` with the necessary `--php-dir` and `--css-dir` arguments, and optionally specifying output files or exclusions.
3.  Execute using `run_terminal_cmd`.
4.  The primary results are written to the specified output files (`php_classes_used.txt`, `css_classes_defined.txt` by default). Agents may need to use `read_file` to consume these results for further analysis (e.g., comparing the lists).

## Example Usage (Agent Step)

```json
// Agent Log Entry Snippet (e.g., AuditAgent)
{
  // ... other fields ...
  "tasksCompleted": [
    "Executed analyze_css_php_classes.py for PHP in 'src/' and CSS in 'assets/css'."
  ],
  "observations": [
    {
      "type": "css_php_analysis_invoked",
      "command": "python tools/analyze_css_php_classes.py --php-dir src/ --css-dir assets/css",
      "exit_code": 0, // Command ran successfully
      "php_output_file": "php_classes_used.txt",
      "css_output_file": "css_classes_defined.txt",
      "message": "Analysis complete. Results written to output files. Further analysis requires reading these files."
    }
    // Agent would likely follow up with read_file on the outputs
  ],
  "nextAgent": "RefactorAgent", // Or Overmind, depending on findings
  "handoffMessage": "CSS/PHP class analysis complete. Results in php_classes_used.txt and css_classes_defined.txt. Please compare lists to find unused CSS."
}
```

## Considerations

-   The script uses regular expressions for class extraction, which might not be perfectly accurate for complex PHP templating or dynamic class generation.
-   CSS `@import` following is limited to imports within the specified `--css-dir` to prevent unintended scanning of external libraries or unrelated directories.
-   Performance may vary depending on the size and number of files in the scanned directories.
-   Error handling for individual file reads/parses logs to stderr but allows the script to continue. Check stderr for potential issues.
