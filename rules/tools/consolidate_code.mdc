---
description: "[TODO: Add description]"
globs:
  - "*.*"
alwaysApply: false
---

# Tool Definition: consolidate_code.py

## Purpose

Aggregates code snippets or sections from multiple files based on context or search criteria, to assist agents in code review, refactoring, or documentation tasks.

## Usage
```bash
python tools/consolidate_code.py --output_file <output_path> [--search_pattern <pattern>] [--file_types <types>] [--context_lines <N>]
```

## Arguments
- `--output_file <output_path>` (MUST): Path to save the consolidated code output.
- `--search_pattern <pattern>` (Optional): Regex or keyword to match code sections to extract.
- `--file_types <types>` (Optional): Comma-separated list of file extensions to include (e.g., `py,js,php`).
- `--context_lines <N>` (Optional): Number of context lines to include before/after each match. Default: 2.

## Input
- Scans files in the project directory (or subdirectory if specified) for matching code sections.
- Reads file contents and extracts code snippets based on the search pattern and file type filters.

## Output
- Writes a single output file containing all matched code snippets, separated by file and match context.
- Prints a summary to standard output (number of files scanned, matches found, output file path).
- Prints errors to standard error if file reading fails.

## When to Use
- **ResearchAgent:** To gather all usages of a function, class, or pattern for analysis.
- **RefactorAgent:** To collect related code before refactoring.
- **DocsAgent:** To aggregate code examples for documentation.

## Example Usage
```bash
python tools/consolidate_code.py --output_file docs/snippets.md --search_pattern "def " --file_types py --context_lines 3
```
This command finds all Python function definitions, includes 3 lines of context, and writes them to `docs/snippets.md`.
