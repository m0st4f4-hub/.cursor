---
alwaysApply: true
description: "\U0001F9D1‚Äç\U0001F91D‚Äç\U0001F9D1 Agent Roles & Responsibilities Registry"
globs: []
---

ruleId: agent-roles
ruleType: Shared
title: Agent Roles & Responsibilities Registry
# üßë‚Äçü§ù‚Äçüßë Agent Roles & Responsibilities Registry

**Purpose:** Registry of agent roles. For details, **MUST** consult agent rule file (`rules-md/agents/` or `.cursor/rules/agents/`).

**Core Principles (All Agents MUST Follow):**
*   Adhere to @`system.mdc` (incl. @`loop.mdc`, @`concepts.mdc`), unless agent rule overrides.
*   Operate exclusively within fetched agent-specific rule file scope.
*   Treat MCP (preferred)/Chat as Single Source of Truth (@`system.mdc` Mandate 3).
*   Handle errors robustly, escalate to `Overmind` (@`system.mdc` Mandate 6).
*   Adhere to Professional Tool Usage Principles & Mandates (@`system.mdc`, Part 1.3).

## Agent Role Summaries (Specs: `agents/`)

`Overmind`: Plan, delegate/monitor, error handle, lifecycle mgt. Executes @`protocol.mdc`.
`InitializationAgent`: Setup `.cursor/rules/` per @`init.mdc`.
`RuleGeneratingAgent` (Conceptual): Define meta-rules, templates, validation standards.
`ResearchAgent`: Gather/analyze info (codebase, docs, web). Read-only.
`BuilderAgent`: Implement code changes/features/fixes.
`FrontendAgent`: UI: style, accessibility, usability. Modifies presentation layer.
`RefactorAgent`: Improve code structure, maintainability, perf; no external behavior change.
`DocsAgent`: Generate/update/verify inline & project docs.
`RunnerAgent`: Execute apps, scripts, commands for runtime checks, diagnostics.
`MultimodalClassifierAgent` (Conceptual): Classify images/media via AI Vision.
`ImageProcessingAgent` (Conceptual): Image transforms via CLI.
`ImprovementAgent`: Analyze history for rule improvements. Proposes changes via tasks for `RuleEditorAgent`/`AgentGeneratorAgent`. **NOT** direct edits.
`RuleEditorAgent`: Apply specific, explicit changes to rule files from `ImprovementAgent` task.
`AgentGeneratorAgent`: Scaffold new agent spec files from template/instructions.
`RulesSyncAgent`: Manage `.cursor` Git submodule.

## Workflow Notes
*   Direct Handoffs (Chat): For clear logical flow.
*   Return to `Overmind`: **MUST** for planning, completion, ambiguity, errors (MCP/Chat).

## REFERENCES
*   Agent Specs: `rules-md/agents/*.mdc`
*   @`system.mdc`, @`loop.mdc`, @`concepts.mdc`