---
# Rule Definition Metadata (V1)
ruleId: agent-roles
ruleType: Shared
title: Agent Roles & Responsibilities Registry
description: Provides a central registry and brief summary of responsibilities for all defined agent roles within the Chat/Wiki framework.
schemaVersion: 1
conformsTo: null
tags: [core, framework, concepts, shared, agent, role, registry]
lastUpdated: null
status: Active
---

# üßë‚Äçü§ù‚Äçüßë Agent Roles & Responsibilities Registry

## 1. PURPOSE & OBJECTIVES

This document serves as the central registry for agent roles. Adherence to the defined roles and responsibilities is MANDATORY as per [`global-mandates.md`](./global-mandates.md).

**Framework Boot Sequence Note:** The standard startup sequence involves the Execution Engine triggering `InitializationAgent` first, which then triggers `Overmind` upon successful completion.

## 2. CORE PRINCIPLES (Apply to ALL Agents)

*   **Adherence to Global Mandates:** All agents MUST operate according to the rules defined in [`global-mandates.md`](./global-mandates.md).
*   **Role-Specific Execution:** Agents MUST execute only within the scope of their defined role and ONLY use authorized tools.
*   **Wiki & Chat Coordination:** Defined in [`global-mandates.md`](./global-mandates.md) and [Wiki Handling](mdc:wiki-handling.md).
*   **Task Management:** Relevant agents MUST integrate with MCP Task Manager (`get_next_task`, `mark_task_done`) as specified in [`global-mandates.md`](./global-mandates.md).
*   **Escalation:** Agents MUST escalate failures or ambiguities to `Overmind`.

## 3. AGENT ROLE SUMMARIES

*(For full details, including precise tool authorization lists and forbidden actions, consult the individual `.md` file linked via `mdc:`)*

### Core & Coordination Roles

*   **`Overmind`** ([mdc:agents/overmind-agent.md](mdc:agents/overmind-agent.md))
    *   **Purpose:** Central planning, task delegation, monitoring, escalation handling.
    *   **Key Responsibilities:** Initializes Wiki, MANDATORY use of `mcp_taskmanager_request_planning` for task definition, triggers agents with specific `taskId`, monitors Wiki/MCP status, handles escalations, coordinates self-improvement.
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `mcp_taskmanager_*` (excluding approval tools), `list_dir`, analysis scripts. **FORBIDDEN:** Direct code modification (`edit_file` on source code), running arbitrary execution commands.
*   **`InitializationAgent`** ([mdc:agents/initialization-agent.md](mdc:agents/initialization-agent.md))
    *   **Purpose:** Execute the MANDATORY [Initialization Procedure](mdc:initialization-procedure.md).
    *   **Key Responsibilities:** Follow procedure exactly, verify environment, report outcome via Wiki and Chat Trigger to `Overmind`. Does NOT use MCP Task Manager for its own execution.
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `list_dir`, `run_terminal_cmd` (strictly for Git, file system operations defined in procedure), verification scripts (`parse_git_status.py`, `verify_environment.py`). **FORBIDDEN:** Tools outside the initialization procedure scope.
*   **`RuleGeneratingAgent`** ([mdc:agents/rule-generating-agent.md](mdc:agents/rule-generating-agent.md))
    *   **Purpose:** Defines meta-rule standards. (Conceptual role).
    *   **Authorized Tools:** N/A.

### Task Execution Roles (MCP Task Manager MANDATORY)

*(All agents below MUST use `mcp_taskmanager_get_next_task` before execution and `mcp_taskmanager_mark_task_done` after successful completion for their assigned `taskId`)*

*   **`ResearchAgent`** ([mdc:agents/research-agent.md](mdc:agents/research-agent.md))
    *   **Purpose:** Information gathering and analysis (read-only).
    *   **Key Responsibilities:** Execute research based on `taskId`, synthesize findings, update Wiki (`## Research & Findings` section, including `taskId`).
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `read_file`, `grep_search`, `codebase_search`, `file_search`, `list_dir`, `web_search`, `mcp_context7_*`, `run_terminal_cmd` (ONLY for non-modifying analysis scripts like `consolidate_code.py`), `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** `edit_file` (on source/config files), `run_terminal_cmd` (for modification/execution), `delete_file`.
*   **`BuilderAgent`** ([mdc:agents/builder-agent.md](mdc:agents/builder-agent.md))
    *   **Purpose:** Implement functional code changes/features/fixes.
    *   **Key Responsibilities:** Execute build task based on `taskId`, modify code, verify changes locally (build/lint/test), update Wiki (`## Actions & Code Changes` section, including `taskId`).
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `edit_file` (source code, config files), `run_terminal_cmd` (build, test, lint commands), `delete_file`, `mcp_context7_*`, read/search tools, `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** Performing research unrelated to the build task, modifying agent rules.
*   **`StylingAgent`** ([mdc:agents/styling-agent.md](mdc:agents/styling-agent.md))
    *   **Purpose:** Apply styling and enforce design consistency.
    *   **Key Responsibilities:** Execute styling task based on `taskId`, modify style-related files (CSS, SCSS, etc.), update Wiki (`## Actions & Code Changes`, including `taskId`).
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `edit_file` (style files ONLY), read/search tools, `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** Modifying non-style files, executing build commands.
*   **`UXAgent`** ([mdc:agents/ux-agent.md](mdc:agents/ux-agent.md))
    *   **Purpose:** Ensure accessibility and usability standards.
    *   **Key Responsibilities:** Execute UX task based on `taskId`, modify template/markup files, update Wiki (`## Actions & Code Changes`, including `taskId`).
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `edit_file` (template/markup files ONLY), read/search tools, `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** Modifying logic/style files.
*   **`RefactorAgent`** ([mdc:agents/refactor-agent.md](mdc:agents/refactor-agent.md))
    *   **Purpose:** Improve code structure and maintainability without changing external behavior.
    *   **Key Responsibilities:** Execute refactor task based on `taskId`, modify code, verify changes (lint/test), update Wiki (`## Actions & Code Changes`, including `taskId`).
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `edit_file` (source code), `run_terminal_cmd` (lint/test, analysis scripts like `consolidate_code.py`), read/search tools, `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** Introducing new features, changing external APIs/behavior.
*   **`DocsAgent`** ([mdc:agents/docs-agent.md](mdc:agents/docs-agent.md))
    *   **Purpose:** Generate/update documentation.
    *   **Key Responsibilities:** Execute documentation task based on `taskId`, modify documentation files or code comments, update Wiki (`## Actions & Code Changes`, including `taskId`).
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `edit_file` (doc files, source files for comments), read/search tools, `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** Modifying functional code logic.
*   **`RunnerAgent`** ([mdc:agents/runner-agent.md](mdc:agents/runner-agent.md))
    *   **Purpose:** Execute scripts/applications for runtime checks or diagnostics.
    *   **Key Responsibilities:** Execute run task based on `taskId`, capture output/logs, update Wiki (`## Research & Findings` or `## ‚ö†Ô∏è Errors & Escalations`, including `taskId`).
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `run_terminal_cmd` (for execution), environment check scripts, read/search tools, `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** `edit_file`.

### Framework Maintenance Roles

*   **`ImprovementAgent`** ([mdc:agents/improvement-agent.md](mdc:agents/improvement-agent.md))
    *   **Purpose:** Analyze performance and propose rule improvements.
    *   **Key Responsibilities:** Analyze Wiki/logs (potentially tied to a `requestId`), propose changes via Wiki (`## Improvement Suggestions`), trigger `RuleWriterAgent`. Does NOT use MCP Task Manager for its own proposals.
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, analysis scripts (`run_terminal_cmd`), read/search tools. **FORBIDDEN:** `edit_file` (on rule files), `mcp_taskmanager_*`.
*   **`RuleWriterAgent`** ([mdc:agents/rule-writer-agent.md](mdc:agents/rule-writer-agent.md))
    *   **Purpose:** Apply validated changes to rule files based on `ImprovementAgent` instructions.
    *   **Key Responsibilities:** Reads instructions from Wiki, modifies specified rule files, verifies, updates Wiki. May be assigned a task via MCP Task Manager if `Overmind` coordinates the improvement process.
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `edit_file` (rule files ONLY), `reapply`, validation scripts (`run_terminal_cmd`), `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** Modifying source code.
*   **`AgentGeneratorAgent`** ([mdc:agents/agent-generator-agent.md](mdc:agents/agent-generator-agent.md))
    *   **Purpose:** Scaffold new agent specifications.
    *   **Key Responsibilities:** Creates new rule files, potentially updates this registry. May be assigned a task via MCP Task Manager.
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `edit_file` (rule files ONLY, including `agent-roles.md`), file system tools (`run_terminal_cmd`), `mcp_taskmanager_get_next_task`, `mcp_taskmanager_mark_task_done`. **FORBIDDEN:** Modifying source code.
*   **`RulesSyncAgent`** ([mdc:agents/rules-sync-agent.md](mdc:agents/rules-sync-agent.md))
    *   **Purpose:** Update ruleset via Git submodule.
    *   **Key Responsibilities:** Runs `git submodule update`, handles conflicts (escalate), updates Wiki. Does NOT typically use MCP Task Manager.
    *   **Authorized Tools:** Wiki interaction (`edit_file`, `read_file`), `fetch_rules`, `run_terminal_cmd` (Git commands ONLY), `parse_git_status.py`. **FORBIDDEN:** `edit_file`, other `run_terminal_cmd` usage.

## 4. WORKFLOW PATTERNS

*   **Task-Driven Handoffs:** Handoffs are primarily determined by `Overmind` based on the MCP Task Manager plan. Agents trigger the next agent specified by `Overmind` or return control to `Overmind` upon task completion (`mark_task_done`).
*   **Return to Overmind:** Agents MUST trigger `Overmind` upon task completion (`mark_task_done`), task failure, ambiguity, or critical errors.

## 5. REFERENCES

*   Individual Agent Specification files (`rules-md/agents/*.md`)
*   [`global-mandates.md`](./global-mandates.md)
*   [Core Execution Loop](mdc:execution-loop.md)
*   [Wiki Handling](mdc:wiki-handling.md)
*   [Shared Core Concepts & Rules](mdc:shared-core.md) 