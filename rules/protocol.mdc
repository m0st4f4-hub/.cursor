---

alwaysApply: true
description: "\U0001F9D0 Ultra-Deep Thinking Protocol"
globs: []
---

# 🧐 Ultra-Deep Thinking Protocol

**Applicability:** `Overmind` **MUST** follow all phases. Others **MUST** adhere to core verification/assumption/scrutiny per @`system.mdc`.

## Phase A: Strategic Planning & Decomposition
1.  **Define Goal:** Outline request/task objective.
2.  **Decompose:** Break goal into smallest logical, independently verifiable subtasks.
3.  **Explore Alternatives (Mandatory, non-trivial):** >=2 distinct approaches. Document alternatives & rationale. Consider failure modes.
4.  **Identify & Challenge Assumptions (Mandatory):** Document key assumptions. Plan verification/subtasks to challenge/confirm.

## Phase B: Execution Orchestration & Task Initiation (MCP)
1.  **Delegate & Initiate:** Assign subtasks via MCP (`mcp_project-manager_create_task_tasks__post`).
    *   **Task Context (MUST):** Sufficient context, clear I/O, prior task/goal refs, explicit assumptions for agent.
    *   **Initial Status (MUST):** Set (e.g., "Pending Activation").
2.  **Log Creation:** Record created task IDs in `Overmind` task.

## Phase C: Rigorous Verification & Cross-Checking (Post-Subtask Completion)
**MUST** perform before accepting subtask result.
0.  **Monitor Statuses (SHOULD):** Periodically monitor subtasks (`mcp_project-manager_get_task_list_tasks__get` / `get_task_by_id`).
1.  **Retrieve & Scrutinize:** Get full details (`mcp_project-manager_get_task_by_id_tasks__task_id__get`). Analyze report, outputs, verification.
2.  **Multi-Method Verification (Mandatory):** Non-trivial: >=2 MCP tools. Critical: >=3 MCP tools (may delegate to `AuditAgent`/`ResearchAgent`). Use diverse tools.
3.  **External Cross-Check (Mandatory, if applicable):** Cross-check agent info (lib docs, web search, prior tasks).
4.  **Analyze Results:** Compare verification outcomes. **MUST** document discrepancies, uncertainties, failures.

## Phase D: Critical Scrutiny & Weakness Analysis (Continuous)
1.  **Review Logic:** Scrutinize reasoning, assumptions, conclusions.
2.  **Identify Uncertainties:** Note ambiguities, low confidence areas.
3.  **Systematic Weakness Search (Mandatory):** Actively search for weaknesses, gaps, assumptions, edge cases. Document.
4.  **Document Pitfalls:** Record risks & mitigation/acceptance rationale.

## Phase E: Escalation Handling (On Task/Verification Failure)
1.  **Gather Deep Context:** Use multiple, diverse methods for failure context.
2.  **Challenge Stated Cause (MUST NOT accept at face value):** Investigate alternative root causes.
3.  **Plan Recovery:** Plan recovery tasks (Phase A alternatives, corrective tasks, research). Document diagnosis.
4.  **Declare Failure (Last Resort):** Only if deep analysis confirms infeasible/unrecoverable. **MUST** document rationale.

## Phase F: Final Review & Reconsideration (All tasks done)
**MUST** perform before final request completion.
1.  **Pause:** Deliberately pause execution.
2.  **Reconsider All:** Review entire process from Phase A. Re-evaluate decisions, assumptions, verification.
3.  **Final Weakness Scan:** Last systematic search for overlooked issues.
4.  **Document Review:** Document this reconsideration, note concluding thoughts/concerns.
5.  **Conclude:** Only then, allow final completion.

## Related Core Framework Documents
* @`system.mdc`
* @`loop.mdc`
* @`concepts.mdc`
* @`roles.mdc`
* @`init.mdc`
* @`entrypoint.mdc`