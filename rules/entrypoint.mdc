---
description: "[TODO: Add description]"
globs:
  - "*.*"
alwaysApply: false
---

# üèÅ Entrypoint & Quickstart Guide

This project contains both the **Project Manager backend (FastAPI)** and **frontend (Next.js)**, as well as the MCP server configuration for integration with the Cursor rules framework.

## 1. Prerequisites

- Python 3.10+ (for backend)
- Node.js 18+ and npm (for frontend)
- (Recommended) [Poetry](https://python-poetry.org/) or `pip` for Python dependencies

## 2. Install Dependencies

```bash
# Backend (from project root)
cd backend
python -m venv .venv
.venv/Scripts/activate  # or source .venv/bin/activate on Unix
pip install -r requirements.txt

# Frontend (from project root)
cd ../frontend
npm install
```

## 3. Build & Run (Development)

From the project root, use the provided scripts in `package.json`:

```bash
# Start both backend (with hot reload) and frontend concurrently:
npm run dev
```

- Backend: [http://localhost:8000](http://localhost:8000)
- Frontend: [http://localhost:3000](http://localhost:3000)

## 4. MCP Server Integration

To enable MCP integration, add the following to your `.cursor/mcp.json` file (create it if it doesn't exist at the root of your project):

```json
{
  "mcpServers": {
    "mcp-server-time": {
      "command": "uvx",
      "args": ["mcp-server-time", "--local-timezone=Africa/Cairo"],
      "enabled": true
    },
    "web-fetch": {
      "command": "uvx",
      "args": ["mcp-server-fetch"],
      "enabled": true
    },
    "server-memory": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-memory"],
      "enabled": true
    },
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp"],
      "enabled": true
    },
    "browser-tools": {
      "command": "cmd",
      "type": "stdio",
      "args": ["/c", "npx", "-y", "@agentdeskai/browser-tools-mcp"],
      "enabled": true
    },
    "desktop-commander": {
      "command": "npx",
      "args": [
        "-y",
        "@wonderwhy-er/desktop-commander"
      ]
    },
    "project-manager": {
      "command": "npx",
      "args": [
        "-y",
        "mcp-remote",
        "http://localhost:8000/mcp"
      ],
      "enabled": true
    }
  }
}
```

- Place this file at `.cursor/mcp.json` in your project root.
- This enables the MCP Project Manager server to communicate with your backend.

## 5. Additional Notes

- For production deployment, refer to the README files within the `backend/` and `frontend/` directories.
- For troubleshooting, consult the logs such as `lint_backend.log`, `lint_frontend.log`, and any build logs generated. 